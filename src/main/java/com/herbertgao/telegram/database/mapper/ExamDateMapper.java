package com.herbertgao.telegram.database.mapper;

import com.herbertgao.telegram.database.entity.ExamDate;
import com.herbertgao.telegram.database.entity.ExamDateExample;
import com.herbertgao.telegram.database.entity.ExamDateKey;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ExamDateMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @SelectProvider(type = ExamDateSqlProvider.class, method = "countByExample")
    long countByExample(ExamDateExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @DeleteProvider(type = ExamDateSqlProvider.class, method = "deleteByExample")
    int deleteByExample(ExamDateExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @Delete({
            "delete from exam_date",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(ExamDateKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @Insert({
            "insert into exam_date (id, exam_year, ",
            "exam_desc, short_desc, ",
            "exam_begin_date, exam_end_date, ",
            "exam_year_begin_date, exam_year_end_date, ",
            "is_delete)",
            "values (#{id,jdbcType=INTEGER}, #{examYear,jdbcType=INTEGER}, ",
            "#{examDesc,jdbcType=VARCHAR}, #{shortDesc,jdbcType=VARCHAR}, ",
            "#{examBeginDate,jdbcType=TIMESTAMP}, #{examEndDate,jdbcType=TIMESTAMP}, ",
            "#{examYearBeginDate,jdbcType=TIMESTAMP}, #{examYearEndDate,jdbcType=TIMESTAMP}, ",
            "#{isDelete,jdbcType=BIT})"
    })
    int insert(ExamDate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @InsertProvider(type = ExamDateSqlProvider.class, method = "insertSelective")
    int insertSelective(ExamDate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @SelectProvider(type = ExamDateSqlProvider.class, method = "selectByExample")
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
            @Result(column = "exam_year", property = "examYear", jdbcType = JdbcType.INTEGER),
            @Result(column = "exam_desc", property = "examDesc", jdbcType = JdbcType.VARCHAR),
            @Result(column = "short_desc", property = "shortDesc", jdbcType = JdbcType.VARCHAR),
            @Result(column = "exam_begin_date", property = "examBeginDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "exam_end_date", property = "examEndDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "exam_year_begin_date", property = "examYearBeginDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "exam_year_end_date", property = "examYearEndDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "is_delete", property = "isDelete", jdbcType = JdbcType.BIT)
    })
    List<ExamDate> selectByExample(ExamDateExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @Select({
            "select",
            "id, exam_year, exam_desc, short_desc, exam_begin_date, exam_end_date, exam_year_begin_date, ",
            "exam_year_end_date, is_delete",
            "from exam_date",
            "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
            @Result(column = "exam_year", property = "examYear", jdbcType = JdbcType.INTEGER),
            @Result(column = "exam_desc", property = "examDesc", jdbcType = JdbcType.VARCHAR),
            @Result(column = "short_desc", property = "shortDesc", jdbcType = JdbcType.VARCHAR),
            @Result(column = "exam_begin_date", property = "examBeginDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "exam_end_date", property = "examEndDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "exam_year_begin_date", property = "examYearBeginDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "exam_year_end_date", property = "examYearEndDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "is_delete", property = "isDelete", jdbcType = JdbcType.BIT)
    })
    ExamDate selectByPrimaryKey(ExamDateKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @UpdateProvider(type = ExamDateSqlProvider.class, method = "updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ExamDate record, @Param("example") ExamDateExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @UpdateProvider(type = ExamDateSqlProvider.class, method = "updateByExample")
    int updateByExample(@Param("record") ExamDate record, @Param("example") ExamDateExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @UpdateProvider(type = ExamDateSqlProvider.class, method = "updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ExamDate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Thu Sep 05 13:16:58 CST 2019
     */
    @Update({
            "update exam_date",
            "set exam_year = #{examYear,jdbcType=INTEGER},",
            "exam_desc = #{examDesc,jdbcType=VARCHAR},",
            "short_desc = #{shortDesc,jdbcType=VARCHAR},",
            "exam_begin_date = #{examBeginDate,jdbcType=TIMESTAMP},",
            "exam_end_date = #{examEndDate,jdbcType=TIMESTAMP},",
            "exam_year_begin_date = #{examYearBeginDate,jdbcType=TIMESTAMP},",
            "exam_year_end_date = #{examYearEndDate,jdbcType=TIMESTAMP},",
            "is_delete = #{isDelete,jdbcType=BIT}",
            "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ExamDate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exam_date
     *
     * @mbg.generated Sun Jun 09 01:21:10 CST 2019
     */
    @Select({
            "select",
            "id, exam_year, exam_desc, exam_begin_date, exam_end_date, exam_year_begin_date, ",
            "exam_year_end_date, is_delete",
            "from exam_date"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER),
            @Result(column = "exam_year", property = "examYear", jdbcType = JdbcType.INTEGER),
            @Result(column = "exam_desc", property = "examDesc", jdbcType = JdbcType.VARCHAR),
            @Result(column = "exam_begin_date", property = "examBeginDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "exam_end_date", property = "examEndDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "exam_year_begin_date", property = "examYearBeginDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "exam_year_end_date", property = "examYearEndDate", jdbcType = JdbcType.TIMESTAMP),
            @Result(column = "is_delete", property = "isDelete", jdbcType = JdbcType.BIT)
    })
    List<ExamDate> selectAll();
}