<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.herbertgao</groupId>
    <artifactId>gaokao_bot</artifactId>
    <version>${revision}</version>
    <name>gaokao_bot</name>
    <description>gaokao_bot</description>
    <properties>
        <java.version>21</java.version>
        <resource.delimiter>@</resource.delimiter>
        <spring.profiles.active>template</spring.profiles.active>

        <revision>7.0.0</revision>

        <springboot.version>3.1.0</springboot.version>

        <telegrambot.version>6.9.7.1</telegrambot.version>

        <mysql.version>8.0.30</mysql.version>
        <mybatis-plus.version>3.5.10.1</mybatis-plus.version>
        <druid.version>1.2.24</druid.version>

        <lombok.version>1.18.36</lombok.version>
        <common.lang.version>3.17.0</common.lang.version>
        <common.collections.version>4.4</common.collections.version>
        <common.pool.version>2.12.1</common.pool.version>
        <fastjson2.version>2.0.57</fastjson2.version>
        <hutool.version>5.8.36</hutool.version>

        <native-build-tools-plugin.version>0.9.28</native-build-tools-plugin.version>
        <docker.build.directory>${project.build.directory}/docker/local</docker.build.directory>
        <docker.skip>true</docker.skip>
        <plugin.fabric8io-docker.version>0.43.2</plugin.fabric8io-docker.version>
        <plugin.maven-compiler.version>3.14.0</plugin.maven-compiler.version>
        <plugin.maven-resources.version>3.3.1</plugin.maven-resources.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.telegram</groupId>
            <artifactId>telegrambots</artifactId>
            <version>${telegrambot.version}</version>
        </dependency>

        <!--mysql驱动依赖-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!--mybatis-plus依赖-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>
        <!--druid数据库连接池依赖-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-3-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>


        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${common.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${common.collections.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>${common.pool.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba.fastjson2</groupId>
            <artifactId>fastjson2</artifactId>
            <version>${fastjson2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba.fastjson2</groupId>
            <artifactId>fastjson2-extension-spring6</artifactId>
            <version>${fastjson2.version}</version>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.name}</finalName>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${plugin.fabric8io-docker.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${plugin.maven-compiler.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${plugin.maven-resources.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>application-${spring.profiles.active}.yml</include>
                    <include>application.yml</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>process-aot</id>
                        <goals>
                            <goal>process-aot</goal>
                        </goals>
                    </execution>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>${native-build-tools-plugin.version}</version>
                <configuration>
                    <!-- imageName is used to set the name of the generated binary file -->
                    <imageName>${project.artifactId}</imageName>
                    <!-- mainClass is used to specify the path to the main method class -->
                    <mainClass>com.herbertgao.telegram.bot.GaokaoBotApplication</mainClass>
                    <buildArgs>
                        --no-fallback
                    </buildArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>docker-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <delimiters>
                                <delimiter>${*}</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <filtering>true</filtering>
                                    <excludes>
                                        <exclude>**/.dockerignore</exclude>
                                        <exclude>**/.gitignore</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                            <outputDirectory>${docker.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <extensions>true</extensions>
                <!--全局配置-->
                <configuration>
                    <!--这一部分是为了实现对远程docker容器的控制-->
                    <!--                    <dockerHost>http://127.0.0.1:2375</dockerHost>-->
                    <verbose>true</verbose>
                    <!--docker远程访问所需证书地址,如果docker远程主机没有启用TLS验证则不需要配证书-->
                    <!--                    <certPath>${project.basedir}/docker/ssh</certPath>-->

                    <!--这一部分是为了实现docker镜像的构建和推送-->
                    <registry>https://registry-intl.us-west-1.aliyuncs.com</registry>

                    <!--镜像相关配置,支持多镜像-->
                    <images>
                        <!-- 单个镜像配置 -->
                        <image>
                            <!--镜像名(含版本号)-->
                            <name>registry-intl.us-west-1.aliyuncs.com/herbertgao/${project.artifactId}:${project.version}-${spring.profiles.active}</name>
                            <!--别名:用于容器命名-->
                            <alias>${project.name}</alias>
                            <!--镜像build相关配置-->
                            <build>
                                <buildx>
                                    <platforms>
                                        <platform>linux/amd64</platform>
                                        <platform>linux/arm64</platform>
                                    </platforms>
                                </buildx>
                                <dockerFileDir>${docker.build.directory}</dockerFileDir>
                                <assembly>
                                    <!-- artifact是预定义的值，表示将项目打包后的jar拷贝到编译上下文中，便于Dockerfile ADD指令 -->
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <tags>
                                    <tag>${project.version}-${spring.profiles.active}</tag>
                                </tags>
                                <labels>
                                    <maven.project.groupId>${project.groupId}</maven.project.groupId>
                                    <maven.project.artifactId>${project.artifactId}</maven.project.artifactId>
                                    <maven.project.version>${project.version}</maven.project.version>
                                </labels>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>remove</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>docker-build</id>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>docker-source</id>
                        <goals>
                            <goal>source</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>docker-push</id>
                        <goals>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <!--该插件需要这个依赖-->
                    <dependency>
                        <groupId>commons-codec</groupId>
                        <artifactId>commons-codec</artifactId>
                        <version>1.18.0</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>template</id>
            <!-- 是否默认 true表示默认-->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>template</spring.profiles.active>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
        </profile>
        <profile>
            <id>online</id>
            <properties>
                <spring.profiles.active>online</spring.profiles.active>
            </properties>
        </profile>
        <profile>
            <id>online-beta</id>
            <properties>
                <spring.profiles.active>online-beta</spring.profiles.active>
            </properties>
        </profile>
        <profile>
            <id>detected-docker-socket</id>
            <activation>
                <file>
                    <exists>/var/run/docker.sock</exists>
                </file>
            </activation>
            <properties>
                <docker.skip>false</docker.skip>
                <!--<docker.host>unix:///var/run/docker.sock</docker.host>-->
            </properties>
        </profile>
        <profile>
            <id>detected-docker-host</id>
            <activation>
                <property>
                    <name>env.DOCKER_HOST</name>
                </property>
            </activation>
            <properties>
                <docker.skip>false</docker.skip>
                <!--<docker.host>${env.DOCKER_HOST}</docker.host>-->
            </properties>
        </profile>
        <profile>
            <id>provided-docker-host</id>
            <activation>
                <property>
                    <name>docker.host</name>
                </property>
            </activation>
            <properties>
                <docker.skip>false</docker.skip>
                <docker.host>unix:///var/run/docker.sock</docker.host>
            </properties>
        </profile>
        <profile>
            <id>native</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.graalvm.buildtools</groupId>
                            <artifactId>native-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>build-image</id>
                                    <goals>
                                        <goal>compile-no-fork</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

</project>
